rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isPublicProfile(data) {
      return !data.settings.privateProfile;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn() && 
        (isOwner(userId) || isPublicProfile(resource.data));
      allow write: if isSignedIn() && isOwner(userId);
      
      // Follow subcollection
      match /follows/{followId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && isOwner(userId);
      }
    }
    
    // Posts collection
    match /posts/{postId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && 
        request.resource.data.userId == request.auth.uid;
      allow update, delete: if isSignedIn() && 
        resource.data.userId == request.auth.uid;
        
      // Comments subcollection
      match /comments/{commentId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
        allow update, delete: if isSignedIn() && 
          resource.data.userId == request.auth.uid;
      }
    }
    
    // Likes collection
    match /likes/{likeId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow delete: if isSignedIn() && 
        resource.data.userId == request.auth.uid;
    }
    
    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isSignedIn() && 
        resource.data.recipientId == request.auth.uid;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && 
        resource.data.recipientId == request.auth.uid;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /profilePictures/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid == userId;
    }
    
    match /posts/{fileName} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        request.auth.uid == fileName.split('_')[0];
    }
  }
}